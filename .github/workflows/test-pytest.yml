name: Test with pytest

on: [push, pull_request]

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install -U pip setuptools
        python -m pip install -U -r requirements/test.txt
        python <<EOF
        # temporary patch until pnuckowski/aioresponses#174 is released or aiohttp is patched.
        from pathlib import Path
        import aioresponses
        p = (Path(aioresponses.__file__).parent / "compat.py")
        print(">>> Patching aioresponses #174 manually")
        t = p.read_text()
        t = t.replace("return StreamReader(protocol, loop=loop)", "return StreamReader(protocol, limit=2 ** 16, loop=loop)")
        p.write_text(t)
        EOF
      shell: bash
    - name: Test with pytest
      run: |
        python -m pytest -v --cov=src -m 'not integration' tests
    - name: Send code coverage report
      uses: codecov/codecov-action@v1
